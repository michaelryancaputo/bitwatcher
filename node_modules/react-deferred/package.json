{
  "name": "react-deferred",
  "version": "0.7.0",
  "description": "react-deferred is a plugin for react, the flow control rules engine, which adds integration with jQuery-style Deferred promises",
  "main": "lib/react-deferred",
  "author": {
    "name": "Jeff Barczewski",
    "email": "jeff.barczewski@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/jeffbski/react-deferred.git"
  },
  "bugs": {
    "url": "http://github.com/jeffbski/react-deferred/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/jeffbski/react-deferred/raw/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">=0.6"
  },
  "dependencies": {
    "react": "~0.7.0",
    "Deferred": "~0.1.1"
  },
  "devDependencies": {
    "mocha": "~1.10.0",
    "chai": "~1.6.0"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha ./test/*.mocha.js"
  },
  "readme": "# react-deferred\n\n[![Build Status](https://secure.travis-ci.org/jeffbski/react-deferred.png?branch=master)](http://travis-ci.org/jeffbski/react-deferred)\n\nreact-deferred is a plugin for react, the flow control rules engine, which adds integration with jQuery-style Deferred promises\n\nFor more information on `react` the lightweight flow control rules engine:  http://github.com/jeffbski/react\n\n## Goals\n\n - make it easy to use React defined functions, promise style and in this case with promises that are compatible with jQuery\n - if a react defined flow function is called without a callback, then a Deferred promise is returned\n - if promises are passed in as input parameters, they will automatically be resolved before tasks are called\n\n## Installing\n\n    npm install react-deferred\n\nOR\n\nPull from github - http://github.com/jeffbski/react-deferred\n\n\n## Example\n\n```javascript\nvar react = require('react-deferred'); // enable deferred promise integration, return react\n// react.logEvents(); // to enable logging to stderr of flow and task events\n\nfunction loadData(x, y, cb) {\n  setTimeout(function () {\n    cb(null, x * y);\n  }, 10);\n}\n\nfunction loadUser(uid, cb) {\n  setTimeout(function () {\n    cb(null, uid + '_user');\n  }, 10);\n}\n\nfunction render(user, data) {\n  return user + data;\n}\n\n\nvar fn = react('myflow', 'a, b, uid, cb -> err, renderedOut',\n  loadData, 'a, b, cb -> err, c',\n  loadUser, 'uid, cb -> err, user',\n  render, 'user, c -> renderedOut'\n);\n\n\nvar promise = fn(2, 3, 'joe');  // calling without passing in cb\npromise.then(function (renderedOut) {\n  console.error('renderedOut:', renderedOut);\n});\n```\n\n\n## License\n\n - [MIT license](http://github.com/jeffbski/react-deferred/raw/master/LICENSE)\n\n## Contributors\n\n - Author: Jeff Barczewski (@jeffbski)\n\n## Contributing\n\n - Source code repository: http://github.com/jeffbski/react-deferred\n - Ideas and pull requests are encouraged  - http://github.com/jeffbski/react-deferred/issues\n\n- You may contact me at @jeffbski or through github at http://github.com/jeffbski\n",
  "readmeFilename": "README.md",
  "_id": "react-deferred@0.7.0",
  "dist": {
    "shasum": "372d5527570ba9432bb0c1d4c3e5aaebc91df47f",
    "tarball": "http://registry.npmjs.org/react-deferred/-/react-deferred-0.7.0.tgz"
  },
  "_from": "react-deferred@*",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "jeffbski",
    "email": "jeff.barczewski@gmail.com"
  },
  "maintainers": [
    {
      "name": "jeffbski",
      "email": "jeff.barczewski@gmail.com"
    }
  ],
  "directories": {},
  "deprecated": "react-deferred has been renamed autoflow-deferred, please update your dependencies to get the latest updates",
  "_shasum": "372d5527570ba9432bb0c1d4c3e5aaebc91df47f",
  "_resolved": "https://registry.npmjs.org/react-deferred/-/react-deferred-0.7.0.tgz"
}
