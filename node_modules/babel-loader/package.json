{
  "name": "babel-loader",
  "version": "4.1.0",
  "description": "babel module loader for webpack",
  "main": "index.js",
  "dependencies": {
    "loader-utils": "^0.2.5"
  },
  "peerDependencies": {
    "babel-core": "^4.7.0",
    "webpack": "^1.4.5"
  },
  "devDependencies": {
    "mocha": "^2.0.1",
    "mocha-loader": "^0.7.0",
    "should": "^4.3.1",
    "webpack-dev-server": "^1.6.6"
  },
  "scripts": {
    "test": "webpack-dev-server --config=test/webpack.config.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel-loader.git"
  },
  "keywords": [
    "webpack",
    "loader",
    "6to5",
    "babel",
    "es6",
    "transpiler",
    "module"
  ],
  "author": {
    "name": "Luis Couto",
    "email": "couto@15minuteslate.net"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/babel/babel-loader/issues"
  },
  "homepage": "https://github.com/babel/babel-loader",
  "readme": "# babel-loader\n\n> Turn ES6 code into vanilla ES5 with no runtime required using [babel](https://github.com/babel/babel);\n\n## Install\n\n```\n$ npm install --save-dev babel-loader\n```\n\n## Usage\n\n```javascript\nimport Animal from 'babel!./Animal.js';\n\nclass Person extends Animal {\n  constructor(arg='default') {\n    this.eat = 'Happy Meal';\n  }\n}\n\nexport default Person;\n```\n\n```javascript\nvar Person = require('babel!./Person.js').default;\nnew Person();\n```\n\nOr within the webpack config:\n\n```javascript\nmodule: {\n    loaders: [\n        { test: /\\.js$/, exclude: /node_modules/, loader: 'babel-loader'}\n    ]\n}\n```\n\nand then import normally:\n\n```javascript\nimport Person from './Person.js';\n```\n\n## Troubleshooting\n\n#### babel-loader is slow!\n\nMake sure you are transforming as few files as possible. Because you are probably \nmatching `/\\.js$/`, you might be transforming the `node_modules` folder or other unwanted\nsource. See the `exclude` option in the `loaders` config as documented above.\n\n#### babel is injecting helpers into each file and bloating my code!\n\nbabel uses very small helpers for common functions such as `_extend`. By default\nthis will be added to every file that requires it.\n\nYou can instead require the babel runtime as a separate module to avoid the duplication.\n\nThe following configuration disables automatic per-file runtime injection in babel, instead\nrequiring `babel-runtime` and making all helper references use it.\n\nSee the [docs](https://babeljs.io/docs/usage/runtime) for more information.\n\n**NOTE:** You must run `npm install babel-runtime --save` to include this in your project.\n\n```javascript\nloaders: [\n  // the optional 'runtime' transformer tells babel to require the runtime instead of inlining it.\n  { test: /\\.jsx?$/, exclude: /node_modules/, loader: 'babel-loader?experimental&optional=runtime' }\n]\n```\n\n## Options\n\nSee the `babel` [options](http://babeljs.io/docs/usage/options/)\n\n## License\n\nMIT Â© Luis Couto\n",
  "readmeFilename": "README.md",
  "_id": "babel-loader@4.1.0",
  "_shasum": "b3726a87583083d61be37f2b1267573ec839a265",
  "_resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-4.1.0.tgz",
  "_from": "https://registry.npmjs.org/babel-loader/-/babel-loader-4.1.0.tgz"
}
