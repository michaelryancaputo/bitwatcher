"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

exports.JSXElement = JSXElement;

var t = _interopRequire(require("../../../types"));

var optional = exports.optional = true;

var immutabilityVisitor = {
  enter: function enter(node, parent, scope, state) {
    if (t.isJSXIdentifier(node) || t.isIdentifier(node)) {
      // direct references that we need to track to hoist this to the highest scope we can
      if (t.isReferenced(node, parent)) {
        state.identifiers.push(node.name);
        return;
      }
    }

    if (t.isJSXClosingElement(node)) {
      this.skip();
      return;
    }

    // ignore
    if (t.isIdentifier(node) || t.isJSXMemberExpression(node)) {
      return;
    }

    state.isImmutable = t.isImmutable(node);
    if (!state.isImmutable) this.stop();
  }
};

function JSXElement(node, parent, scope, file) {
  // todo - check for `ref` attribute

  var state = {
    identifiers: [],
    isImmutable: true
  };

  this.traverse(immutabilityVisitor, state);
  this.skip();

  console.log(state);

  if (!state.isImmutable) return;
}

exports.__esModule = true;